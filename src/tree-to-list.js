"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
function TreeToList(tree, linkNode) {
    let list = [];
    let pnode = tree.root();
    _loop(pnode, 0);
    function _node(pnode, level) {
        let item = Object.assign({}, Object.keys(pnode)
            .reduce(function (item, key) {
            item[key] = pnode[key];
            return item;
        }, {}), {
            parent: (pnode.parent ? pnode.parent.id : null),
        });
        if (linkNode) {
            item[utils_1.SYMBOL_NODE] = pnode;
        }
        delete item.children;
        delete item[utils_1.SYMBOL_OPTIONS];
        item = utils_1.sortKeys(item);
        list.push(item);
        return pnode;
    }
    function _loop(pnode, level) {
        _node(pnode, level);
        if (pnode.children.length) {
            for (let i in pnode.children) {
                _loop(pnode.children[i], level + 1);
            }
        }
    }
    return list;
}
exports.TreeToList = TreeToList;
exports.default = TreeToList;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS10by1saXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidHJlZS10by1saXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsbUNBQWdFO0FBU2hFLFNBQWdCLFVBQVUsQ0FBd0IsSUFBVSxFQUFFLFFBQWtCO0lBTy9FLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUVkLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUV4QixLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRWhCLFNBQVMsS0FBSyxDQUFxQixLQUFRLEVBQUUsS0FBYTtRQUV6RCxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQzthQUM3QyxNQUFNLENBQUMsVUFBVSxJQUFJLEVBQUUsR0FBRztZQUUxQixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3ZCLE9BQU8sSUFBSSxDQUFDO1FBQ2IsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBQ1IsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztTQUMvQyxDQUVDLENBQUM7UUFFSCxJQUFJLFFBQVEsRUFDWjtZQUNDLElBQUksQ0FBQyxtQkFBVyxDQUFDLEdBQUcsS0FBSyxDQUFDO1NBQzFCO1FBRUQsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLHNCQUFjLENBQUMsQ0FBQztRQUU1QixJQUFJLEdBQUcsZ0JBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV0QixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWhCLE9BQU8sS0FBSyxDQUFDO0lBQ2QsQ0FBQztJQUVELFNBQVMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFhO1FBRWxDLEtBQUssQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFcEIsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFDekI7WUFDQyxLQUFLLElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLEVBQzVCO2dCQUNDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQzthQUNwQztTQUNEO0lBQ0YsQ0FBQztJQUVELE9BQU8sSUFBSSxDQUFDO0FBQ2IsQ0FBQztBQXZERCxnQ0F1REM7QUFFRCxrQkFBZSxVQUFVLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVHJlZU5vZGUgZnJvbSAnLi9ub2RlJztcbmltcG9ydCBUcmVlIGZyb20gJy4vdHJlZSc7XG5pbXBvcnQgeyBzb3J0S2V5cywgU1lNQk9MX09QVElPTlMsIFNZTUJPTF9OT0RFIH0gZnJvbSAnLi91dGlscyc7XG5cbmV4cG9ydCB0eXBlIElUcmVlVG9MaXN0PFQgZXh0ZW5kcyB7fSwgVSA9IGFueT4gPSBBcnJheTx7XG5cdGlkPzogc3RyaW5nIHwgbnVtYmVyLFxuXHRwYXJlbnQ/OiBzdHJpbmcgfCBudW1iZXIsXG5cdHV1aWQ/OiBzdHJpbmcsXG5cdGNvbnRlbnQ6IFUsXG59ICYgVD47XG5cbmV4cG9ydCBmdW5jdGlvbiBUcmVlVG9MaXN0PFQgZXh0ZW5kcyB7fSwgVSA9IGFueT4odHJlZTogVHJlZSwgbGlua05vZGU/OiBib29sZWFuKTogQXJyYXk8e1xuXHRpZD86IHN0cmluZyB8IG51bWJlcixcblx0cGFyZW50Pzogc3RyaW5nIHwgbnVtYmVyLFxuXHR1dWlkPzogc3RyaW5nLFxuXHRjb250ZW50OiBVLFxufSAmIFQ+XG57XG5cdGxldCBsaXN0ID0gW107XG5cblx0bGV0IHBub2RlID0gdHJlZS5yb290KCk7XG5cblx0X2xvb3AocG5vZGUsIDApO1xuXG5cdGZ1bmN0aW9uIF9ub2RlPEogZXh0ZW5kcyBUcmVlTm9kZT4ocG5vZGU6IEosIGxldmVsOiBudW1iZXIpXG5cdHtcblx0XHRsZXQgaXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIE9iamVjdC5rZXlzKHBub2RlKVxuXHRcdFx0LnJlZHVjZShmdW5jdGlvbiAoaXRlbSwga2V5KVxuXHRcdFx0e1xuXHRcdFx0XHRpdGVtW2tleV0gPSBwbm9kZVtrZXldO1xuXHRcdFx0XHRyZXR1cm4gaXRlbTtcblx0XHRcdH0sIHt9KSwge1xuXHRcdFx0cGFyZW50OiAocG5vZGUucGFyZW50ID8gcG5vZGUucGFyZW50LmlkIDogbnVsbCksXG5cdFx0fSkgYXMgYW55IGFzIHtcblx0XHRcdFtLIGluIGtleW9mIEpdOiBKW0tdO1xuXHRcdFx0fTtcblxuXHRcdGlmIChsaW5rTm9kZSlcblx0XHR7XG5cdFx0XHRpdGVtW1NZTUJPTF9OT0RFXSA9IHBub2RlO1xuXHRcdH1cblxuXHRcdGRlbGV0ZSBpdGVtLmNoaWxkcmVuO1xuXHRcdGRlbGV0ZSBpdGVtW1NZTUJPTF9PUFRJT05TXTtcblxuXHRcdGl0ZW0gPSBzb3J0S2V5cyhpdGVtKTtcblxuXHRcdGxpc3QucHVzaChpdGVtKTtcblxuXHRcdHJldHVybiBwbm9kZTtcblx0fVxuXG5cdGZ1bmN0aW9uIF9sb29wKHBub2RlLCBsZXZlbDogbnVtYmVyKVxuXHR7XG5cdFx0X25vZGUocG5vZGUsIGxldmVsKTtcblxuXHRcdGlmIChwbm9kZS5jaGlsZHJlbi5sZW5ndGgpXG5cdFx0e1xuXHRcdFx0Zm9yIChsZXQgaSBpbiBwbm9kZS5jaGlsZHJlbilcblx0XHRcdHtcblx0XHRcdFx0X2xvb3AocG5vZGUuY2hpbGRyZW5baV0sIGxldmVsICsgMSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGxpc3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRyZWVUb0xpc3RcbiJdfQ==